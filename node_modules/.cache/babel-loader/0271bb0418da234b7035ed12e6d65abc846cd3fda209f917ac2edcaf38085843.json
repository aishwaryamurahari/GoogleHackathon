{"ast":null,"code":"var _GoogleMapsService;\nimport { Loader } from '@googlemaps/js-api-loader';\nclass GoogleMapsService {\n  constructor() {\n    this.loader = null;\n    this.isInitialized = false;\n    this.initPromise = null;\n  }\n  static getInstance() {\n    if (!GoogleMapsService.instance) {\n      GoogleMapsService.instance = new GoogleMapsService();\n    }\n    return GoogleMapsService.instance;\n  }\n  async initialize(apiKey) {\n    if (this.isInitialized) {\n      return;\n    }\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n    this.initPromise = this.doInitialize(apiKey);\n    return this.initPromise;\n  }\n  async doInitialize(apiKey) {\n    try {\n      this.loader = new Loader({\n        apiKey,\n        version: 'weekly',\n        libraries: ['places', 'geometry'] // Include all required libraries\n      });\n      await this.loader.load();\n      this.isInitialized = true;\n      console.log('Google Maps API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Google Maps API:', error);\n      this.initPromise = null;\n      throw error;\n    }\n  }\n  isReady() {\n    return this.isInitialized;\n  }\n  getLoader() {\n    return this.loader;\n  }\n}\n_GoogleMapsService = GoogleMapsService;\nGoogleMapsService.instance = void 0;\nexport default GoogleMapsService;","map":{"version":3,"names":["Loader","GoogleMapsService","constructor","loader","isInitialized","initPromise","getInstance","instance","initialize","apiKey","doInitialize","version","libraries","load","console","log","error","isReady","getLoader","_GoogleMapsService"],"sources":["/Users/aishwaryamurahari/Documents/study/GoogleHackathon/src/services/googleMapsService.ts"],"sourcesContent":["import { Loader } from '@googlemaps/js-api-loader';\n\nclass GoogleMapsService {\n  private static instance: GoogleMapsService;\n  private loader: Loader | null = null;\n  private isInitialized = false;\n  private initPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  static getInstance(): GoogleMapsService {\n    if (!GoogleMapsService.instance) {\n      GoogleMapsService.instance = new GoogleMapsService();\n    }\n    return GoogleMapsService.instance;\n  }\n\n  async initialize(apiKey: string): Promise<void> {\n    if (this.isInitialized) {\n      return;\n    }\n\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    this.initPromise = this.doInitialize(apiKey);\n    return this.initPromise;\n  }\n\n  private async doInitialize(apiKey: string): Promise<void> {\n    try {\n      this.loader = new Loader({\n        apiKey,\n        version: 'weekly',\n        libraries: ['places', 'geometry'] // Include all required libraries\n      });\n\n      await this.loader.load();\n      this.isInitialized = true;\n      console.log('Google Maps API initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize Google Maps API:', error);\n      this.initPromise = null;\n      throw error;\n    }\n  }\n\n  isReady(): boolean {\n    return this.isInitialized;\n  }\n\n  getLoader(): Loader | null {\n    return this.loader;\n  }\n}\n\nexport default GoogleMapsService;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,2BAA2B;AAElD,MAAMC,iBAAiB,CAAC;EAMdC,WAAWA,CAAA,EAAG;IAAA,KAJdC,MAAM,GAAkB,IAAI;IAAA,KAC5BC,aAAa,GAAG,KAAK;IAAA,KACrBC,WAAW,GAAyB,IAAI;EAEzB;EAEvB,OAAOC,WAAWA,CAAA,EAAsB;IACtC,IAAI,CAACL,iBAAiB,CAACM,QAAQ,EAAE;MAC/BN,iBAAiB,CAACM,QAAQ,GAAG,IAAIN,iBAAiB,CAAC,CAAC;IACtD;IACA,OAAOA,iBAAiB,CAACM,QAAQ;EACnC;EAEA,MAAMC,UAAUA,CAACC,MAAc,EAAiB;IAC9C,IAAI,IAAI,CAACL,aAAa,EAAE;MACtB;IACF;IAEA,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB,OAAO,IAAI,CAACA,WAAW;IACzB;IAEA,IAAI,CAACA,WAAW,GAAG,IAAI,CAACK,YAAY,CAACD,MAAM,CAAC;IAC5C,OAAO,IAAI,CAACJ,WAAW;EACzB;EAEA,MAAcK,YAAYA,CAACD,MAAc,EAAiB;IACxD,IAAI;MACF,IAAI,CAACN,MAAM,GAAG,IAAIH,MAAM,CAAC;QACvBS,MAAM;QACNE,OAAO,EAAE,QAAQ;QACjBC,SAAS,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;MACpC,CAAC,CAAC;MAEF,MAAM,IAAI,CAACT,MAAM,CAACU,IAAI,CAAC,CAAC;MACxB,IAAI,CAACT,aAAa,GAAG,IAAI;MACzBU,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,IAAI,CAACX,WAAW,GAAG,IAAI;MACvB,MAAMW,KAAK;IACb;EACF;EAEAC,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACb,aAAa;EAC3B;EAEAc,SAASA,CAAA,EAAkB;IACzB,OAAO,IAAI,CAACf,MAAM;EACpB;AACF;AAACgB,kBAAA,GArDKlB,iBAAiB;AAAjBA,iBAAiB,CACNM,QAAQ;AAsDzB,eAAeN,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}